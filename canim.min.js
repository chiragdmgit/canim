(function()
{var props=('backgroundColor borderBottomColor borderBottomWidth borderLeftColor borderLeftWidth '+'borderRightColor borderRightWidth borderSpacing borderTopColor borderTopWidth bottom color fontSize '+'fontWeight height left letterSpacing lineHeight marginBottom marginLeft marginRight marginTop maxHeight '+'maxWidth minHeight minWidth opacity outlineColor outlineOffset outlineWidth paddingBottom paddingLeft '+'paddingRight paddingTop right textIndent top width wordSpacing zIndex').split(' ');var target={};var canim=window.canim=function(el,css,opts)
{el=typeof el=='string'?document.getElementById(el):el;if(typeof css=='string')
{var stl=css;css={style:stl,klass:''};}
else css=css||{};opts=opts||{};var cssstyle=css.style,cssclass=css.klass,duration=opts.duration||1000,callback=opts.callback,easing=opts.easing||function(pos){return pos;},current={},starttime=(new Date()).getTime(),finishtime=starttime+duration,interval,compStyle=((document.defaultView&&document.defaultView.getComputedStyle)?document.defaultView.getComputedStyle(el,null):el.currentStyle);target=manipulate(css);for(prop in target)current[prop]=parse(prop,compStyle[prop]);interval=setInterval(function()
{var curtime=(new Date()).getTime(),pos=curtime>finishtime?1:(curtime-starttime)/duration;for(prop in target)
{el.style[prop]=target[prop].f(current[prop].v,target[prop].v,easing(pos))+target[prop].u;if(prop=='opacity')el.style['filter']='alpha(opacity='+(el.style[prop]*100)+');';}
if(curtime>finishtime)
{clearInterval(interval);if(callback)callback();}},10);}
function manipulate(css)
{var style="",tmpdiv,finalcss,p=props.length,tstyle={},val,kstyle={};if(css.klass)
{var k=css.klass.split(",");for(var s=0;s<document.styleSheets.length;s++)
{if(kstyle.length==k.length)break;mysheet=document.styleSheets[s];if(mysheet.cssText)
{csstext=mysheet.cssText.replace(/\s+/,'');reklass=new RegExp("([a-z]+)[ ]*{([^}]+)}","g");var tmpcss={};while((result=reklass.exec(csstext))!=null)tmpcss[result[1]]=result[2];for(cls in tmpcss)
{var re=new RegExp(cls);if((result=re.exec(css.klass))!=null)kstyle[cls]=tmpcss[cls].replace("\n","");}}
else
{myrules=mysheet.cssRules?mysheet.cssRules:mysheet.rules;for(i=0;i<myrules.length;i++)
{selector=myrules[i].selectorText.replace(/^\./,'');reklass=new RegExp(selector);if((result=reklass.exec(css.klass))!=null)
{var m=myrules[i].cssText.match(/{([^}]+)}/);if(m!=null)kstyle[result[0]]=m[1].replace("\n","");}}}}}
for(var cstyle in kstyle)style+=kstyle[cstyle]+';';style=(style+css.style).toLowerCase();tmpdiv=document.createElement('div');tmpdiv.innerHTML='<div style="'+style+'"></div>';finalcss=tmpdiv.childNodes[0].style;while(p--)if(finalcss[props[p]])tstyle[props[p]]=parse(props[p],finalcss[props[p]]);return tstyle;}
function parse(prop,val)
{var p=parseFloat(val),q=val.replace(/^[\-\d\.]+/,'');if(isNaN(p)&&q.substring(0,1)!='#'&&q.substring(0,1)!='r')if(target[prop]&&target[prop].v>0){p=0;q=target[prop].u;}
return isNaN(p)?{v:q,f:calcolor,u:''}:{v:p,f:calvalue,u:q};}
function calvalue(source,target,pos)
{return(source+((target-source)*pos)).toFixed(3);}
function calcolor(source,target,pos)
{scolor=convertColor(source);tcolor=convertColor(target);var tr=parseInt((scolor[0]+((tcolor[0]-scolor[0])*pos)));tr=(tr>255?255:(tr<0?0:tr));var tg=parseInt((scolor[1]+((tcolor[1]-scolor[1])*pos)));tg=(tg>255?255:(tg<0?0:tg));var tb=parseInt((scolor[2]+((tcolor[2]-scolor[2])*pos)));tb=(tb>255?255:(tb<0?0:tb));return'rgb('+tr+', '+tg+', '+tb+')';}
function convertColor(color)
{var rgbColors=new Object();if(color[0]=='r')
{color=color.substring(color.indexOf('(')+1,color.indexOf(')'));rgbColors=color.split(',',3);rgbColors[0]=parseInt(rgbColors[0]);rgbColors[1]=parseInt(rgbColors[1]);rgbColors[2]=parseInt(rgbColors[2]);}
else if(color.substring(0,1)=="#")
{if(color.length==4)
{rgbColors[0]=color.substring(1,2)+''+color.substring(1,2);rgbColors[1]=color.substring(2,3)+''+color.substring(2,3);rgbColors[2]=color.substring(3,4)+''+color.substring(3,4);}
else
{rgbColors[0]=color.substring(1,3);rgbColors[1]=color.substring(3,5);rgbColors[2]=color.substring(5,7);}
rgbColors[0]=parseInt(rgbColors[0],16);rgbColors[1]=parseInt(rgbColors[1],16);rgbColors[2]=parseInt(rgbColors[2],16);}
return rgbColors;}})();